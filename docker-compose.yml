version: "3.2"
services:
  neo4j:
    build: database
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - application
    environment:
      NEO4J_AUTH: neo4j/secret
      dbms.connector.bolt.listen_address: neo4j:7687
      dbms.connector.bolt.advertised_address: neo4j:7687
    healthcheck:
      test: cypher-shell --username neo4j --password secret 'MATCH (n) RETURN COUNT(n);'
      interval: 10s
      timeout: 10s
      retries: 5

  backend:
    build: backend
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: secret
      PYTHON_HOST: neural_network
      PYTHON_PORT: 80
    ports:
      - "8080:8080"
    depends_on:
      neural_network:
        condition: service_healthy
    networks:
      - application

  frontend:
    build: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    networks:
      - application

  neural_network:
    build: neural_network
    volumes:
      - ./neural_network/app:/usr/src/app
    ports:
      - "80:80"
    networks:
      - application
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: wget http://localhost:80 -O -
      interval: 1s
      timeout: 1s
      retries: 10

networks:
  application:
    driver: bridge
